{"version":3,"sources":["img/bg.png","components/styles/StyledCell.js","tetrominos.js","components/Cell.js","components/styles/StyledStage.js","components/Stage.js","components/styles/StyledDisplay.js","components/Display.js","components/styles/StyledStartButton.js","components/StartButton.js","gameHelpers.js","components/styles/StyledTetris.js","hooks/useStage.js","components/Tetris.js","hooks/usePlayer.js","hooks/useGameStatus.js","hooks/useInterval.js","App.js","index.js"],"names":["module","exports","StyledCell","styled","div","props","color","type","TETROMINOS","0","shape","I","J","L","O","S","T","Z","randomTetromino","randTetromino","Math","floor","random","length","React","memo","console","log","StyledStage","height","width","Stage","stage","map","row","cell","x","key","StyledDisplay","gameOver","Display","text","StyledStartButton","button","StartButton","callback","onClick","createStage","Array","from","fill","checkCollision","player","moveX","moveY","y","tetromino","pos","StyledTetrisWrapper","bgImage","StyledTetris","useStage","resetPlayer","useState","setStage","rowsCleared","setRowsCleared","useEffect","updateStage","prevStage","newStage","forEach","value","collided","reduce","ack","findIndex","prev","unshift","push","sweepRows","Tetris","dropTime","setDropTime","setGameOver","setPlayer","rotate","matrix","dir","rotatedTetro","_","index","col","reverse","useCallback","STAGE_WIDTH","clonedPlayer","JSON","parse","stringify","offset","usePlayer","updatePlayerPos","playerRotate","score","setScore","rows","setRows","level","setLevel","linePoints","calcScore","useGameStatus","movePlayer","drop","move","keyCode","delay","savedCallback","useRef","current","id","setInterval","clearInterval","useInterval","role","tabIndex","onKeyDown","e","onKeyUp","App","className","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.a8793d90.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/bg.2810fe6b.png\";","import styled from 'styled-components';\n\n\n\n\n\nexport const StyledCell = styled.div`\n\n  width: auto;\n  background: rgba(${props => props.color}, 0.8);\n\n  border: ${props => (props.type === 0 ? '0px solid' : '4px solid')};\n\n\n  border-bottom-color: rgba(${props => props.color}, 0.1);\n\n   border-right-color: rgba(${props => props.color}, 1);\n\n   border-top-color: rgba(${props => props.color}, 1);\n\n   border-left-color: rgba(${props => props.color}, 0.3);\n\n\n`","export const TETROMINOS = {\n\n\t0: { shape: [[0]], color: '0, 0, 0' },\n\tI: { \n\n\t\tshape: [\n\t\t[0, 'I', 0, 0],\n\t\t[0, 'I', 0, 0],\n\t\t[0, 'I', 0, 0],\n\t\t[0, 'I', 0, 0]\n\n\n\t\t],\n\n\t\t color: '80, 227, 230',\n\n\t},\n\n\tJ: { \n\n\t\tshape: [\n\t\t[0, 'J', 0],\n\t\t[0, 'J', 0],\n\t\t['J', 'J', 0]\n\n\n\t\t],\n\n\t\t color: '36, 95, 223',\n\n\t},\n\n\tL: { \n\n\t\tshape: [\n\t\t[0, 'L', 0],\n\t\t[0, 'L', 0],\n\t\t[0, 'L', 0]\n\n\n\t\t],\n\n\t\t color: '223, 173, 36',\n\n\t},\n\n\tO: { \n\n\t\tshape: [\n\t\t['O', 'O'],\n\t\t['O', 'O'],\n\t\t\n\n\n\t\t],\n\n\t\t color: '223, 217, 36',\n\n\t},\n\n\n\t\tS: { \n\n\t\tshape: [\n\t\t[0, 'S', 'S'],\n\t\t['S', 'S', 0],\n\t\t[0, 0, 0]\n\n\n\t\t],\n\n\t\t color: '48, 211, 56',\n\n\t},\n\n\n\n\t\tT: { \n\n\t\tshape: [\n\t\t[0, 0, 0],\n\t\t['T', 'T', 'T'],\n\t\t[0, 'T', 0]\n\n\n\t\t],\n\n\t\t color: '132, 61, 198',\n\n\t},\n\n\n\t\tZ: { \n\n\t\tshape: [\n\t\t['Z', 'Z', 0],\n\t\t[0, 'Z', 'Z'],\n\t\t[0, 0, 0]\n\n\n\t\t],\n\n\t\t color: '227, 78, 78',\n\n\t},\n\n\n\n\n}\n\n\nexport const randomTetromino = () => {\n\n\tconst tetrominos = 'IJLOSTZ'\n\n\tconst randTetromino = \n\t tetrominos[Math.floor(Math.random() * tetrominos.length)];\n\n\n\t return TETROMINOS[randTetromino];\n\n\t \n}","import React from 'react';\n\nimport { StyledCell } from './styles/StyledCell';\n\nimport { TETROMINOS } from '../tetrominos'; \n\n\n\n\nconst Cell = ({ type }) => (\n\n\t<StyledCell type={type} color={TETROMINOS[type].color}>{console.log(\"rerender\")}</StyledCell>\n\t\n\t\n\t\n\n\n)\n\nexport default React.memo(Cell);","import styled from 'styled-components';\n\n\nexport const StyledStage = styled.div`\n\n  display: grid;\n  grid-template-rows: repeat(\n    ${props => props.height},\n    calc(25vw / ${props => props.width})\n\n  );\n\n    grid-template-columns: repeat(${props => props.width}, 1fr);\n\n    grid-gap: 1px;\n\n    border: 2px solid #333;\n    width: 100%;\n\n    max-width: 25vw;\n\n    background: #111;\n\n\n`;","import React from 'react';\n\nimport Cell from './Cell';\n\nimport { StyledStage } from './styles/StyledStage';\n\n\n\nconst Stage = ({ stage }) => (\n\n\t<StyledStage width={stage[0].length} height={stage.length}>\n\t\n\t{stage.map(row => row.map((cell, x) => <Cell key={x} type={cell[0]} />))}\n\n\t</StyledStage>\n\t\n\n\n)\n\nexport default Stage;","import styled from 'styled-components';\n\n\n\nexport const StyledDisplay = styled.div`\n\n   box-sizing: border-box;\n   display: flex;\n   align-items: center;\n\n   margin: 0 0 20px 0;\n\n   padding: 20px;\n\n   border: 4px solid #333;\n\n   min-height: 30px;\n\n   width: 100%;\n\n   border-radius: 20px;\n\n   color: ${props => (props.gameOver ? 'red' : '#999')};\n\n   background: #000;\n\n   font-family: Pixel, Arial,  Helvetica, sans-serif;\n\n   font-size: 0.8rem;\n\n\n\n`;","import React from 'react';\nimport { StyledDisplay } from './styles/StyledDisplay';\n\n\n\nconst Display = ({ gameOver, text }) => (\n\n\t<StyledDisplay gameOver={gameOver}>\n\t{text}\n\t</StyledDisplay>\n\t\n\n\n)\n\nexport default Display;","import styled from 'styled-components';\n\n\nexport const StyledStartButton = styled.button`\n\n  box-sizing: border-box;\n  margin: 0 0 20px 0;\n\n  padding: 20px;\n\n  min-height: 30px;\n\n  width: 100%;\n\n  border-radius: 20px;\n  border: none;\n\n  color: white;\n\n  background: #333;\n\n  font-family: Pixel, Arial, Helvetica, sans-serif;\n\n  font-size: 1rem;\n\n  outline: none;\n\n  cursor: pointer;\n\n\n`","import React from 'react';\n\nimport { StyledStartButton } from './styles/StyledStartButton';\n\n\nconst StartButton = ({ callback }) => (\n\n\t<StyledStartButton onClick={callback}>\n\t\n\tStart Game\n\n\t</StyledStartButton>\n\t\n\n\n)\n\nexport default StartButton;","export const STAGE_WIDTH = 12;\nexport const STAGE_HEIGHT = 20;\n\nexport const createStage = () =>\n  Array.from(Array(STAGE_HEIGHT), () =>\n    new Array(STAGE_WIDTH).fill([0, 'clear']),\n  );\n\nexport const checkCollision = (player, stage, { x: moveX, y: moveY }) => {\n  for (let y = 0; y < player.tetromino.length; y += 1) {\n    for (let x = 0; x < player.tetromino[y].length; x += 1) {\n     \n      if (player.tetromino[y][x] !== 0) {\n        if (\n         \n          !stage[y + player.pos.y + moveY] ||\n       \n          !stage[y + player.pos.y + moveY][x + player.pos.x + moveX] ||\n          \n          stage[y + player.pos.y + moveY][x + player.pos.x + moveX][1] !==\n            'clear'\n        ) {\n          return true;\n        }\n      }\n    }\n  }\n};","import styled from 'styled-components';\n\n\nimport bgImage from '../../img/bg.png';\n\n\n\n\n\n\nexport const StyledTetrisWrapper = styled.div`\n\n  width: 100vw;\n  height: 100vh;\n  background: url(${bgImage}) #000;\n\n  background-size: cover;\n\n  overflow: hidden;\n\n\n\n\n`\n\n\nexport const StyledTetris = styled.div`\n\n   display: flex;\n   align-items: flex-start;\n\n   padding: 40px;\n\n   margin: 0 auto;\n\n   max-width: 900px;\n\n\n\n   aside {\n\n   \twidth: 100%;\n   \tmax-width: 200px;\n   \tdisplay: block;\n   \tpadding: 0 20px;\n\n\n\n   }\n\n\n`","import { useState, useEffect } from 'react';\nimport { createStage } from '../gameHelpers';\n\nexport const useStage = (player, resetPlayer) => {\n  const [stage, setStage] = useState(createStage());\n\n  const [rowsCleared, setRowsCleared] = useState(0);\n\n\n\n  useEffect(() => {\n\n    setRowsCleared(0);\n\n    const sweepRows = newStage => \n      newStage.reduce((ack, row) => {\n\n        if (row.findIndex(cell => cell[0] === 0) === -1) {\n\n          setRowsCleared(prev => prev + 1);\n\n          ack.unshift(new Array(newStage[0].length).fill([0, 'clear']));\n\n          return ack;\n\n        }\n\n        ack.push(row);\n\n        return ack;\n\n      }, [])\n\n  \tconst updateStage = prevStage => {\n\n  \t\tconst newStage = prevStage.map(row => \n  \t\t\trow.map(cell => (cell[1] === 'clear' ? [0, 'clear'] : cell)),\n\n  \t\t\t);\n\n\n\n  \t\tplayer.tetromino.forEach((row, y) => {\n\n  \t\t\trow.forEach((value, x) => {\n  \t\t\t\tif (value !== 0) {\n\n  \t\t\t\t\tnewStage[y + player.pos.y][x + player.pos.x] = [\n  \t\t\t\t\tvalue,\n  \t\t\t\t\t`${player.collided ? 'merged' : 'clear'}`,\n\n\n  \t\t\t\t\t];\n  \t\t\t\t}\n\n  \t\t\t});\n  \t\t});\n\n      if (player.collided) {\n\n        resetPlayer();\n\n        return sweepRows(newStage);\n\n\n      }\n\n  \t\treturn newStage;\n\n\n\n  \t};\n\n  \tsetStage(prev => updateStage(prev));\n\n  \n  // }, [player.collided, player.pos.x, player.pos.y, player.tetromino]);\n    }, [player, resetPlayer]);\n\n\n\n  return [stage, setStage, rowsCleared];\n\n\n};\n\n\n","import React, { useState } from 'react';\n\nimport Stage from './Stage';\n\nimport Display from './Display';\n\nimport StartButton from './StartButton';\n\n import { createStage, checkCollision } from '../gameHelpers';\n\nimport { StyledTetrisWrapper, StyledTetris } from './styles/StyledTetris';\n\n\n// custom hooks\n\nimport { useInterval } from '../hooks/useInterval';\n\nimport { usePlayer } from '../hooks/usePlayer';\n\nimport { useStage } from '../hooks/useStage';\n\nimport { useGameStatus } from '../hooks/useGameStatus';\n\n\n\n\nconst Tetris = () => {\n\n\t// console.log(createStage())\n\n\tconst [dropTime, setDropTime] = useState(null);\n\n\tconst [gameOver, setGameOver] = useState(false);\n\n   const [player, updatePlayerPos, resetPlayer, playerRotate] = usePlayer();\n   const [stage, setStage, rowsCleared] = useStage(player, resetPlayer);\n\n   const [score, setScore, rows, setRows, level, setLevel] = useGameStatus(rowsCleared);\n\n\n\n  \n\n\tconsole.log('re-render');\n\n\n\tconst movePlayer = dir => {\n\n\t\tif (!checkCollision(player, stage, { x: dir, y: 0})) {\n\n\t\t\tupdatePlayerPos({ x: dir, y: 0 });\n\n\n\t\t}\n\n\t\t\n\n\n\n\t}\n\n\tconst startGame = () => {\n\n     setStage(createStage());\n\n     setDropTime(1000);\n\n     resetPlayer();\n\n     setGameOver(false);\n\n     setScore(0);\n     setRows(0);\n     setLevel(0);\n\n     \n\n\n\t}\n\n\n\tconst drop = () => {\n\n\t\tif (rows > (level + 1) * 10) {\n\n\t\t\tsetLevel(prev => prev + 1);\n\n\t\t\tsetDropTime(1000 / (level + 1) + 200);\n\n\t\t}\n\n\t\tif (!checkCollision(player, stage, { x: 0, y: 1 })) {\n\n\t\t\t updatePlayerPos({ x: 0, y: 1, collided: false })\n\n\n\t\t} else {\n\n\t\t\tif (player.pos.y < 1) {\n\n\t\t\t\tconsole.log(\"GAME OVER!!!\");\n\n\t\t\t\tsetGameOver(true);\n\n\t\t\t\tsetDropTime(null);\n\n\n\n\t\t\t}\n\n\t\t\tupdatePlayerPos({ x: 0, y: 0, collided: true });\n\n\t\t}\n\n \n\n\t}\n\n\n\tconst keyUp = ({ keyCode }) => {\n\n\t\tif (!gameOver) {\n\n\t\t\tif (keyCode === 40) {\n\n\t\t\t\tconsole.log(\"interval on\")\n\n\t\t\t\tsetDropTime(1000 / (level + 1) + 200);\n\n\n\n\t\t\t}\n\t\t}\n\t}\n\n\n\tconst dropPlayer = () => {\n\n\t\tconsole.log(\"interval off\")\n\n\t\tsetDropTime(null);\n\n\n\t\tdrop();\n\n\t\t\n\t}\n\n\tconst move = ({ keyCode }) => {\n\n     if(!gameOver) {\n\n     \tif(keyCode === 37) {\n\n     \t\tmovePlayer(-1);\n\n     \t} else if (keyCode === 39) {\n\n     \t\tmovePlayer(1);\n\n\n     \t} else if (keyCode === 40) {\n\n     \t\tdropPlayer();\n\n\n     \t}  else if (keyCode === 38) {\n\n     \t\tplayerRotate(stage, 1);\n\n     \t}\n     }\n\n\t\t\n\t}\n\n\tuseInterval(() => {\n\n\t\tdrop();\n\n\n\t}, dropTime)\n\n\n\treturn (\n\n\t\t<StyledTetrisWrapper \n\t\trole=\"button\" \n\t\ttabIndex=\"0\" \n\t\tonKeyDown={e => move(e)} \n\t\tonKeyUp={keyUp}\n\t\t>\n\n\t\t<StyledTetris>\n\n\t\t<Stage stage={stage} />\n\n\t\t<aside>\n    \n    {gameOver ? (\n    \t<Display gameOver={gameOver} text=\"Game Over\" />\n\n    \t) : (\n\n\n\t\t <div>\n\n\t\t <Display text={`Score: ${score}`}/>\n\n        <Display text={`Rows: ${rows}`}/>\n\n        <Display text={`Level: ${level}`} />\n\n        </div>\n\n        )}\n\n        <StartButton callback={startGame} />\n        \n\n\n\n\t\t </aside>\n\n\n\t\t</StyledTetris>\n\n\n\t\t</StyledTetrisWrapper>\n\n\t)\n}\n\nexport default Tetris;","import { useState, useCallback } from 'react';\n\nimport { TETROMINOS, randomTetromino } from '../tetrominos';\n\nimport { STAGE_WIDTH, checkCollision } from '../gameHelpers';\n\n\n\nexport const usePlayer = () => {\n  const [player, setPlayer] = useState({\n    pos: { x: 0, y: 0 },\n    // tetromino: randomTetromino().shape,\n    tetromino: TETROMINOS[0].shape,\n    collided: false,\n  });\n\n  const rotate = (matrix, dir) => {\n\n    const rotatedTetro = matrix.map((_, index) => \n      matrix.map(col => col[index]),\n\n\n      );\n\n    if (dir > 0) return rotatedTetro.map(row => row.reverse());\n\n    return rotatedTetro.reverse();\n\n\n  };\n\n  const playerRotate = (stage, dir) => {\n\n    const clonedPlayer = JSON.parse(JSON.stringify(player));\n    clonedPlayer.tetromino = rotate(clonedPlayer.tetromino, dir);\n\n    const pos = clonedPlayer.pos.x;\n\n    let offset = 1;\n\n    while(checkCollision(clonedPlayer, stage, { x: 0, y: 0 })) {\n\n        clonedPlayer.pos.x += offset;\n\n        offset = -(offset + (offset > 0 ? 1 : -1));\n\n        if (offset > clonedPlayer.tetromino[0].length) {\n\n          rotate(clonedPlayer.tetromino, -dir);\n\n          clonedPlayer.pos.x = pos;\n\n\n          return;\n          \n        }\n\n    }\n\n\n    setPlayer(clonedPlayer);\n\n\n\n\n  };\n\n\n\n\n\n  const updatePlayerPos = ({ x, y, collided }) => {\n\n  \tsetPlayer(prev => ({\n\n  \t\t...prev,\n  \t\tpos: { x: (prev.pos.x += x), y: (prev.pos.y += y)},\n\n  \t\tcollided,\n\n  \t}))\n\n\n  }\n\n  const resetPlayer = useCallback(() => {\n  \tsetPlayer({\n\n  \t\tpos: { x: STAGE_WIDTH / 2 - 2, y: 0 },\n  \t\ttetromino: randomTetromino().shape,\n  \t\tcollided: false,\n\n  \t})\n\n  }, [])\n\n  return [player, updatePlayerPos, resetPlayer, playerRotate];\n}\n\n\n","import { useState, useEffect, useCallback } from 'react';\n\n\n\n\nexport const useGameStatus = rowsCleared => {\n\n  const [score, setScore] = useState(0);\n\n   const [rows, setRows] = useState(0);\n\n    const [level, setLevel] = useState(0);\n\n\n  const linePoints = [40, 100, 300, 1200];\n\n  const calcScore = useCallback(() => {\n\n  \tif (rowsCleared > 0) {\n\n  \t\tsetScore(prev => prev + linePoints[rowsCleared - 1] * (level + 1));\n\n     setRows(prev => prev + rowsCleared);\n\n  \t}\n\n  }, [level, linePoints, rowsCleared]);\n\n  useEffect(() => {\n    \n    calcScore();\n\n  }, [calcScore, rowsCleared, score]);\n\n  return [score, setScore, rows, setRows, level, setLevel];\n\n\n\n\n\n};\n\n","import { useEffect, useRef } from 'react';\n\nexport function useInterval(callback, delay) {\n  const savedCallback = useRef();\n  // Remember the latest callback.\n  useEffect(() => {\n    savedCallback.current = callback;\n  }, [callback]);\n\n  // Set up the interval.\n  useEffect(() => {\n    function tick() {\n      savedCallback.current();\n    }\n    if (delay !== null) {\n      const id = setInterval(tick, delay);\n      return () => {\n        clearInterval(id);\n      };\n    }\n  }, [delay]);\n}","import React from 'react';\nimport Tetris from './components/Tetris';\n\n\n\n\n\n\nconst App = () => (\n\n\t<div className=\"App\">\n\n\n\t<Tetris />\n\n\t</div>\n\t\n\n\n\n);\n\n\n\n\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}